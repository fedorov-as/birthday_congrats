// Code generated by MockGen. DO NOT EDIT.
// Source: alert_manager.go

// Package alertmanager is a generated GoMock package.
package alertmanager

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAlertManager is a mock of AlertManager interface.
type MockAlertManager struct {
	ctrl     *gomock.Controller
	recorder *MockAlertManagerMockRecorder
}

// MockAlertManagerMockRecorder is the mock recorder for MockAlertManager.
type MockAlertManagerMockRecorder struct {
	mock *MockAlertManager
}

// NewMockAlertManager creates a new mock instance.
func NewMockAlertManager(ctrl *gomock.Controller) *MockAlertManager {
	mock := &MockAlertManager{ctrl: ctrl}
	mock.recorder = &MockAlertManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAlertManager) EXPECT() *MockAlertManagerMockRecorder {
	return m.recorder
}

// Send mocks base method.
func (m *MockAlertManager) Send(to []string, subject, message string) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Send", to, subject, message)
}

// Send indicates an expected call of Send.
func (mr *MockAlertManagerMockRecorder) Send(to, subject, message interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Send", reflect.TypeOf((*MockAlertManager)(nil).Send), to, subject, message)
}
